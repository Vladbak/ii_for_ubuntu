<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  skin_model.vert
//  vertex shader
//
//  Created by Andrzej Kapolka on 10/14/13.
//  Copyright 2013 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/Inputs.slh@>
<@include gpu/Color.slh@>
<@include gpu/Transform.slh@>
<$declareStandardTransform()$>

<@include Skinning.slh@>

uniform mat4 texcoordMatrices[MAX_TEXCOORDS];

out vec4 _position;
out vec2 _texCoord0;
out vec3 _normal;
out vec3 _color;
out float _alpha;

void main(void) {
    vec4 position = vec4(0.0, 0.0, 0.0, 0.0);
    vec3 interpolatedNormal = vec3(0.0, 0.0, 0.0);

    skinPositionNormal(inSkinClusterIndex, inSkinClusterWeight, inPosition, inNormal.xyz, position, interpolatedNormal);

    // pass along the color
    _color = colorToLinearRGB(inColor.rgb);
    _alpha = inColor.a;

    // and the texture coordinates
    _texCoord0 = (texcoordMatrices[0] * vec4(inTexCoord0.st, 0.0, 1.0)).st;
    
    // standard transform
    TransformCamera cam = getTransformCamera();
    TransformObject obj = getTransformObject();
    <$transformModelToEyeAndClipPos(cam, obj, position, _position, gl_Position)$>
    <$transformModelToEyeDir(cam, obj, interpolatedNormal.xyz, interpolatedNormal.xyz)$>
    _normal = interpolatedNormal.xyz;
}
